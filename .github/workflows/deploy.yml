name: CI/CD for EC2 Deployment

on:
  push:
    branches:
      - test
      - main

jobs:
  deploy-to-test:
    if: github.ref == 'refs/heads/test'
    runs-on: ubuntu-latest

    steps:
      # Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v2

      # Configurar clave SSH para la instancia de prueba
      - name: Set up SSH key for Test Instance
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.ec2_SSH_KEY }}

      # Añadir la instancia de prueba a los hosts conocidos
      - name: Add Test EC2 to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # Desplegar a la instancia de prueba
      - name: Deploy to Test Instance
        run: |
          echo "Deploying to Test Instance..."
          scp -r ./index.html ./script.js ./styles.css ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/
          ssh ec2-user@${{ secrets.EC2_HOST }} 'sudo mv /home/ec2-user/*.html /var/www/html/'
          ssh ec2-user@${{ secrets.EC2_HOST }} 'sudo mv /home/ec2-user/*.js /var/www/html/'
          ssh ec2-user@${{ secrets.EC2_HOST }} 'sudo mv /home/ec2-user/*.css /var/www/html/'
          ssh ec2-user@${{ secrets.EC2_HOST }} 'sudo systemctl restart httpd'

  create-pull-request:
    if: github.ref == 'refs/heads/test'
    runs-on: ubuntu-latest

    steps:
      # Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v2

      # Crear Pull Request desde test a main
      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: test
          destination_branch: main
          github_token: ${{ secrets.MY_ACCESS_TOKEN }}
          pr_title: "Pull Request: Deploy Test to Main"
          pr_body: "This PR deploys the tested changes in `test` to `main`."

  deploy-to-main:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      # Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v2

      # Configurar claves SSH para las instancias de producción
      - name: Set up SSH key for Production Instances
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.ec2_SSH_KEY }}

      # Añadir las instancias de producción a los hosts conocidos
      - name: Add Production EC2 to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST1 }} >> ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.EC2_HOST2 }} >> ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.EC2_HOST4 }} >> ~/.ssh/known_hosts

      # Desplegar a las instancias de producción
      - name: Deploy to Production Instances
        run: |
          for HOST in ${{ secrets.EC2_HOST1 }} ${{ secrets.EC2_HOST2 }} ${{ secrets.EC2_HOST4 }}
          do
            echo "Deploying to $HOST..."
            scp -r ./index.html ./script.js ./styles.css ec2-user@$HOST:/home/ec2-user/
            ssh ec2-user@$HOST 'sudo mv /home/ec2-user/*.html /var/www/html/'
            ssh ec2-user@$HOST 'sudo mv /home/ec2-user/*.js /var/www/html/'
            ssh ec2-user@$HOST 'sudo mv /home/ec2-user/*.css /var/www/html/'
            ssh ec2-user@$HOST 'sudo systemctl restart httpd'
          done
